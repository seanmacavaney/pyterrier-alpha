name: test / parallel

on:
  push: {branches: [main]} # pushes to main
  pull_request: {} # all PRs

jobs:
  pytest:
    strategy:
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.10', '3.12']
        java: [11, 13]
        terrier: [''] # blank indicates latest

    runs-on: ${{ matrix.os }}
    steps:

    - name: xgBoost dependency
      if: matrix.os == 'macOs-latest'
      run: |
        brew install libomp

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Java ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'zulu'

    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.runtag }}-${{ hashFiles('requirements.txt', 'requirements_dev.txt') }}

    - name: Install Dependencies
      run: |
        pip install --upgrade -r requirements.txt -r requirements_dev.txt
        pip install -e .[parallel]

    - name: Unit Test
      env:
        TERRIER_VERSION: ${{ matrix.terrier }}
        PARALLEL_TESTING: '1'
      run: |
        pytest --durations=20 -p no:faulthandler tests/test_grid.py tests/test_grid.py tests/test_parallel.py tests/test_pool.py

   - name: Report Test Results
     if: always()
     run: |
       printf "**Test Results**\n\n" >> $GITHUB_STEP_SUMMARY
       jq '.summary' ${{ env.runtag }}.results.json >> $GITHUB_STEP_SUMMARY
       printf "\n\n**Test Coverage**\n\n" >> $GITHUB_STEP_SUMMARY
       jq '.files | to_entries[] | " - `" + .key + "`: **" + .value.summary.percent_covered_display + "%**"' -r ${{ env.runtag }}.coverage.json >> $GITHUB_STEP_SUMMARY
